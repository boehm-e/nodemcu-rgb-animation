{"version":3,"sources":["actions/settings-actions.ts","reducers/settings-reducer.ts","defaultSettings.js","components/Elements.tsx","components/SnakeView.tsx","components/Debug.tsx","components/Animations.tsx","components/Games.tsx","components/AudioVis.tsx","components/Home.tsx","index.js"],"names":["SET_DARK_MODE","SET_READING_HELP_ACTIVE","SET_URL","settingsReducer","state","data","type","payload","darkMode","readingHelpActive","url","getUrl","replaceAll","defaultSettings","localStorage","getItem","Card","styled","div","Title","h2","SubTitle","Title3","h3","AnimationsWrapper","AnimationWrapper","props","background","color","SnakeWrapper","CheckBox","input","attrs","SaveButton","button","ColorProfile","SnakeView","useState","selected","setData","Part","React","memo","idx","className","isSelected","styleColor","onClick","newData","console","log","setSelected","style","readOnly","checked","setColor","useLocalStorage","colorProfiles","setColorProfiles","useSelector","updateRibbon","colors","map","part","Color","rgbNumber","axios","post","JSON","stringify","useEffect","onChange","profileName","prompt","parse","id","length","name","profile","filter","Input","Debug","setId","syncData","setUrl","parseInt","dispatch","useDispatch","value","e","target","ip","Animations","color1","setColor1","color2","setColor2","runAnimation","padding","paddingLeft","width","display","gap","boxSizing","Games","AudioVis","active","setActive","setWidth","speed","setSpeed","volumeCoef","setVolumeCoef","widthRef","useRef","speedRef","volumeCoefRef","undefined","current","justifyContent","margin","axis","xmin","xstep","xmax","x","Home","run","a","allReducers","combineReducers","allStoreEnhancers","composeWithDevTools","applyMiddleware","thunk","store","createStore","ReactDOM","render","document","body"],"mappings":"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","file":"static/js/main.a029ed59.chunk.js","sourcesContent":["// dark mode\nexport const SET_DARK_MODE = 'settings:SET_DARK_MODE';\nexport const SET_READING_HELP_ACTIVE = 'settings:SET_READING_HELP_ACTIVE';\nexport const SET_URL = 'settings:SET_URL';\n\nexport function setDarkMode(state: any) {\n  return {\n    type: SET_DARK_MODE,\n    payload: state\n  }\n}\n\nexport function setUrlIp(state: any) {\n  return {\n    type: SET_URL,\n    payload: state\n  }\n}\n\nexport function setReadingHelpActive(state: any) {\n  return {\n    type: SET_READING_HELP_ACTIVE,\n    payload: state\n  }\n}\n","import {\n  SET_DARK_MODE,\n  SET_READING_HELP_ACTIVE,\n  SET_URL,\n} from '../actions/settings-actions';\n\nexport default function settingsReducer(state = {}, data: any) {\n  var new_state;\n  const type: any = data.type;\n  const payload: any = data.payload;\n\n  switch (type) {\n    case SET_DARK_MODE:\n      return {\n        ...state,\n        darkMode: payload\n      }\n    case SET_READING_HELP_ACTIVE:\n      return {\n        ...state,\n        readingHelpActive: payload\n      }\n    case SET_URL:\n      return {\n        ...state,\n        url: payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport function getIsDarkMode(state:any) {\n  return state.settingsReducer.darkMode;\n}\n\nexport function getIsReadingHelpActive(state:any) {\n  return state.settingsReducer.readingHelpActive;\n}\n\nexport function getUrl(state:any) {\n  return (state.settingsReducer.url || \"\").replaceAll(\"\\\"\",\"\");\n}\n\n","const defaultSettings = {\n  darkMode: false,\n  readingHelpActive: true,\n  url: localStorage.getItem(\"url\")\n}\n\n\nexport default defaultSettings;","import styled from \"styled-components\";\n\nexport const Card = styled.div`\n    width: calc(100% - 4rem);\n    margin: 2rem;\n    padding: 2rem;\n    box-sizing: border-box;\n    background: white;\n    border-radius: 1rem;\n    box-shadow: 10px 9px 17px 8px #0000003d;\n`\n\nexport const Title = styled.h2`\n    font-family: \"Ubuntu\";\n    font-weight: 500;\n    font-size: 2rem;\n    text-align: center;\n    margin-bottom: 0;\n    color: #673ab7;    \n`\n\nexport const SubTitle = styled.h2`\n    font-family: \"Ubuntu\";\n    font-weight: 500;\n    font-size: 1.5rem;\n    margin-top: 0; \n    padding-top: 0;\n    margin-bottom: 3rem;\n    \n`\n\nexport const Title3 = styled.h3`\n    font-family: \"Ubuntu\";\n    font-weight: 500;\n    font-size: 1.2rem;\n    margin-top: 0; \n    padding-top: 0;\n    margin-top: 3rem;\n    \n`\n\nexport const AnimationsWrapper = styled.div`\n    height: 100%;\n    gap: 2rem;\n    padding: 0 2rem;\n    display: flex;\n    position: relative;\n    overflow: auto;\n    white-space: nowrap;\n`\n\n\ninterface AnimationWrapperProps {\n    background?: string,\n    color?: string,\n}\nexport const AnimationWrapper = styled.div<AnimationWrapperProps>`\n    width: 5rem ;\n    min-width: 5rem ;\n    height: 8rem;\n    position: relative;\n    display: flex;\n    flex-flow: column;\n\n    &:before {\n        content: \"\";\n        width: 5rem ;\n        min-width: 5rem ;\n        height: 5rem;\n        border-radius: 50%;\n        background: #f7fbfe;\n        border: 2px solid #d8d8da;\n        display: inline-block;\n        position: relative;\n            \n        ${props => props.background && `background-image: url(\"${props.background}\");`}\n        ${props => props.color && `background-color: ${props.color};`}\n\n        background-size: cover;\n        background-position: center;\n        background-repeat: no-repeat;\n    }\n    \n    & .title {\n        /* position: absolute; */\n        /* bottom: -2.5rem; */\n        width: 100%;\n        text-align: center;\n        font-family: \"Ubuntu\";\n        font-weight: 500;\n        font-size: 1.5rem;\n    }\n`\n","declare var chrome: any;\n/*global chrome*/\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { HexColorPicker, RgbaStringColorPicker } from \"react-colorful\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport Color from 'color';\nimport axios from 'axios';\nimport { Card, SubTitle } from './Elements';\nimport useLocalStorage from \"use-local-storage\";\nimport { getUrl } from '../reducers/settings-reducer';\n\nconst SnakeWrapper = styled.div`\n    /* display: flex; */\n    /* width: 100vw; */\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n    margin-top: 2rem;\n    /* display: grid; */\n    & .row {\n        display: block;\n        /* width: 100%; */\n    }\n\n    & .part {\n        width: calc((25vw - 2rem));        \n        height: calc((25vw - 2rem));        \n        display: block;\n        /* outline: 2px solid black; */\n        position: relative;\n        float: left;\n        display: flex;\n        justify-content: center;\n    } \n    & .topRight:after {\n        content: \"\";\n        width: calc((25vw - 2rem) - 1em - 2px);\n        height: calc((25vw - 2rem) / 2 - 0.5em - 1px);\n        display: block;\n        position: absolute;\n        float: left;\n        border-top-right-radius: calc(100vw / 8);\n        border: var(--color) 1em solid;\n        background-clip: content-box;\n        border-bottom: none;\n        border-left: 0;\n        top: calc(50% - 0.5rem);\n        left: 0;\n    } \n    & .bottomRight:after {\n        content: \"\";\n        width: calc((25vw - 2rem) - 1em - 2px);\n        height: calc((25vw - 2rem) / 2 - 0.5em - 1px);\n        display: block;\n        position: absolute;\n        float: left;\n        border-bottom-right-radius: calc(100vw / 8);\n        border: var(--color) 1em solid;\n        background-clip: content-box;\n        border-left: none;\n        border-top: none;\n        top: 1px;\n        left: 0;\n    } \n    & .bottomLeft:after {\n        content: \"\";\n        width: calc((25vw - 2rem) - 1em - 2px);\n        height: calc((25vw - 2rem) / 2 - 0.5em - 1px);\n        display: block;\n        position: absolute;\n        float: left;\n        border-bottom-left-radius: calc(100vw / 8);\n        border: var(--color) 1em solid;\n        background-clip: content-box;\n        border-right: none;\n        border-top: none;\n        left: 0;\n        top: 1px;\n    } \n    \n    & .topLeft:after {\n        content: \"\";\n        width: calc((25vw - 2rem) - 1em - 2px);\n        height: calc((25vw - 2rem) / 2 - 0.5em - 1px);\n        display: block;\n        position: absolute;\n        float: left;\n        border-top-left-radius: calc(100vw / 8);\n        border: var(--color) 1em solid;\n        background-clip: content-box;\n        border-bottom: none;\n        border-right: none;\n        bottom: calc(-50% + 0.5em);\n        left: 0;\n        bottom: 1px;\n    }\n    & .normal:after{\n        content: \"\";\n        top: 0;\n        left: 0;\n        width: calc(100% - 2px);\n        height: 1rem;\n        background-color: var(--color);\n        margin-top: calc(50% - 0.5rem);\n        position: absolute;\n    }\n`;\n\nconst CheckBox = styled.input.attrs({ type: \"checkbox\" })`\n`\n\nconst SaveButton = styled.button`\n    font-family: \"Ubuntu\";\n    background: white;\n    border: 1px solid black;\n    padding: 0.5rem 1rem ;\n    width: 100%;\n    margin-top: 1rem;\n`\nconst ColorProfile = styled.div`\n    font-family: \"Ubuntu\";\n\n\n    & .colorProfile {\n        display: flex;\n        justify-content: space-around;\n        padding: 1rem 0;\n        border-bottom: 1px solid black;\n        align-items: center;\n\n        & .name {\n            width: 50%;\n        }\n\n        & button {\n            font-family: \"Ubuntu\";\n            background: white;\n            border: 1px solid black;\n            padding: 0.5rem 1rem ;\n        }\n    }\n\n`\n\nconst SnakeView = () => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState([\n        { selected: false, color: \"#ff00ff\" },\n        { selected: false, color: \"#C0C0C0\" },\n        { selected: false, color: \"#808080\" },\n        { selected: false, color: \"#D9E3F0\" },\n        { selected: false, color: \"#F47373\" },\n        { selected: false, color: \"#697689\" },\n        { selected: false, color: \"#37D67A\" },\n        { selected: false, color: \"#2CCCE4\" },\n        { selected: false, color: \"#555555\" },\n        { selected: false, color: \"#dce775\" },\n        { selected: false, color: \"#ff8a65\" },\n        { selected: false, color: \"#ba68c8\" },\n        { selected: false, color: \"#ba68c8\" },\n        { selected: false, color: \"#ba68c8\" },\n        { selected: false, color: \"#ba68c8\" },\n        { selected: false, color: \"#ba68c8\" },\n    ])\n\n    const setSelected = (idx: number, selected: boolean) => {\n        let newData = [...data]\n        // newData[idx].selected = !newData[idx].selected;\n        newData[idx].selected = selected;\n        console.log(newData)\n        setData(newData)\n    }\n\n    const isSelected = (idx: number) => data[idx].selected;\n\n    const Part = React.memo((props: any) => {\n        const { idx, className } = props;\n\n\n        const selected = isSelected(idx);\n\n        var styleColor: any = { \"--color\": data[idx].color }\n\n        return (\n            <span data-id={idx} key={idx} onClick={() => { setSelected(idx, !selected) }} style={styleColor} className={`part ${selected && \"selected\"} ${className}`}>\n                <CheckBox readOnly data-id={idx} checked={selected} />\n            </span>\n        )\n    })\n\n\n    const [color, setColor] = useState(\"#aabbcc\");\n    const [colorProfiles, setColorProfiles] = useLocalStorage<string>(\"colorProfiles\", \"[]\");\n    const url = useSelector(getUrl);\n\n    console.log(\"URLLLL snakeview\", url)\n\n    const updateRibbon = (newData: any) => {\n        const colors = newData.map((part: any) => Color(part.color).rgbNumber());\n        axios.post(`${url}/setColors`, JSON.stringify(colors));\n    }\n    useEffect(() => {\n        const newData = data.map((part) => part.selected ? { ...part, color } : part)\n        setData(newData)\n        updateRibbon(newData);\n    }, [color, colorProfiles])\n\n\n    const saveColorProfile = () => {\n        const profileName = prompt(\"Nom du profil\");\n        setColorProfiles(JSON.stringify([...JSON.parse(colorProfiles), { id: colorProfiles.length + 1, name: profileName, data }]))\n    }\n\n    const removeColorProfile = (id: any) => {\n        setColorProfiles(JSON.stringify([...JSON.parse(colorProfiles).filter((profile: any) => profile.id != id)]))\n    }\n\n\n    return (\n        <>\n            <Card>\n                <SubTitle>Contrôler par parties</SubTitle>\n                <SnakeWrapper>\n                    <div className=\"row\">\n                        <Part idx={0} className=\"normal\"></Part>\n                        <Part idx={1} className=\"normal\"></Part>\n                        <Part idx={2} className=\"normal\"></Part>\n                        <Part idx={3} className=\"topRight\"></Part>\n                    </div>\n                    <div className=\"row\">\n                        <Part idx={7} className=\"topLeft\"></Part>\n                        <Part idx={6} className=\"normal\"></Part>\n                        <Part idx={5} className=\"normal\"></Part>\n                        <Part idx={4} className=\"bottomRight\"></Part>\n                    </div>\n                    <div className=\"row\">\n                        <Part idx={8} className=\"bottomLeft\"></Part>\n                        <Part idx={9} className=\"normal\"></Part>\n                        <Part idx={10} className=\"normal\"></Part>\n                        <Part idx={11} className=\"topRight\"></Part>\n                    </div>\n                    <div className=\"row\">\n                        <Part idx={15} className=\"normal\"></Part>\n                        <Part idx={14} className=\"normal\"></Part>\n                        <Part idx={13} className=\"normal\"></Part>\n                        <Part idx={12} className=\"bottomRight\"></Part>\n                    </div>\n                </SnakeWrapper>\n\n                <HexColorPicker color={color} onChange={setColor} />\n                <SaveButton onClick={saveColorProfile}>Sauvegarder</SaveButton>\n\n                <ColorProfile>\n                    {JSON.parse(colorProfiles).map((profile: any) => {\n                        return <div className=\"colorProfile\">\n                            <div className=\"name\">\n                                {profile.name}\n                            </div>\n                            <button onClick={() => { setData(profile.data); updateRibbon(profile.data); }} className=\"restore\">\n                                Appliquer\n                            </button>\n                            <div onClick={() => removeColorProfile(profile.id)} className=\"delete\">\n                                X\n                            </div>\n                        </div>\n                    })}\n                </ColorProfile>\n\n            </Card>\n        </>\n    )\n}\n\nexport default SnakeView;","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { Card, SubTitle } from './Elements';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUrl } from '../reducers/settings-reducer';\nimport useLocalStorage from 'use-local-storage';\nimport { setUrlIp } from '../actions/settings-actions';\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n    width: 100%;\n    font-family: \"Ubuntu\";\n    background: white;\n    border: 1px solid black;\n    padding: 0.5rem 1rem ;\n    margin-top: 1rem;\n    box-sizing: border-box;\n`;\n\nconst Debug = () => {\n    const [id, setId] = useState<any>(0);\n\n    const [url, setUrl] = useLocalStorage<string>(\"url\", \"\", { syncData: true });\n\n    useEffect(() => {\n        axios.post(`${url}/setColor`, JSON.stringify({ id: parseInt(id), color: 0xff0000 }))\n    }, [id])\n\n    const dispatch = useDispatch();\n\n    return (\n        <Card>\n            <SubTitle>Config</SubTitle>\n            <Input type=\"number\" value={id} onChange={(e: any) => setId(e?.target?.value)} />\n            <Input type=\"text\" value={url} onChange={(e) => {\n                const ip = e.target.value;\n                console.log(`SET URLLL : |${ip}|`)\n                setUrl(ip);\n                dispatch(setUrlIp(ip));\n            }} />\n        </Card>\n    )\n}\n\nexport default Debug;","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { HexColorPicker, RgbaStringColorPicker } from \"react-colorful\";\nimport { AnimationsWrapper, AnimationWrapper, Card, SubTitle } from './Elements';\nimport styled from 'styled-components';\nimport Color from 'color';\nimport { useSelector } from 'react-redux';\nimport { getUrl } from '../reducers/settings-reducer';\n\n    \n\n\nconst Animations = () => {\n    const [color1, setColor1] = useState(\"#ff0000\");\n    const [color2, setColor2] = useState(\"#0000ff\");\n    const url = useSelector(getUrl);\n\n    const runAnimation = (name: string) => {\n        axios.post(`${url}/setAnimation`, JSON.stringify({\n            \"name\": name,\n        }));\n    }\n\n    const setAnimationColors = () => {\n        axios.post(`${url}/setAnimationColors`, JSON.stringify({\n            \"color1\": Color(color1).rgbNumber(),\n            \"color2\": Color(color2).rgbNumber(),\n        }));\n    }\n\n    useEffect(() => {\n        setAnimationColors();\n    }, [color1, color2])\n    return (\n        <Card style={{ padding: '2rem 0' }}>\n            <SubTitle style={{paddingLeft: '2rem'}}>Animations</SubTitle>\n            <AnimationsWrapper>\n                <AnimationWrapper onClick={() => runAnimation(\"reverse\")} color=\"#fceba1\" background=\"https://i.ibb.co/X2sYRMn/arrows-reverse-transfer-switch-line-icon.jpg\">\n                    <span className=\"title\">Reverse</span>\n                </AnimationWrapper>\n\n                <AnimationWrapper onClick={() => runAnimation(\"scanner\")} color=\"#fceba1\" background=\"https://hackster.imgix.net/uploads/attachments/357764/giphy_P5EUwFmXQS.gif?auto=compress&gifq=35&w=600&h=450&fit=min\">\n                    <span className=\"title\">Scanner</span>\n                </AnimationWrapper>\n\n                <AnimationWrapper onClick={() => runAnimation(\"fade\")} color=\"#fceba1\" background=\"https://thumbs.gfycat.com/IdenticalDigitalAndeancat-size_restricted.gif\">\n                    <span className=\"title\">Fade</span>\n                </AnimationWrapper>\n\n                <AnimationWrapper onClick={() => runAnimation(\"rainbow\")} color=\"#fceba1\" background=\"http://static.skaip.org/img/emoticons/180x180/f6fcff/rainbow.gif\">\n                    <span className=\"title\">Rainbow</span>\n                </AnimationWrapper>\n\n                <AnimationWrapper onClick={() => runAnimation(\"twinkle\")} background=\"https://art.pixilart.com/2d841d2d492b932.gif\">\n                    <span className=\"title\">twinkle</span>\n                </AnimationWrapper>\n\n                <AnimationWrapper onClick={() => runAnimation(\"theater\")} background=\"https://i.pinimg.com/originals/1c/18/de/1c18de56bb18a86cbecbd8da93fce410.gif\">\n                    <span className=\"title\">Theater</span>\n                </AnimationWrapper>\n\n                <AnimationWrapper onClick={() => runAnimation(\"wipe\")} background=\"https://art.pixilart.com/b631903b2d6208c.gif\">\n                    <span className=\"title\">Wipe</span>\n                </AnimationWrapper>\n\n                <AnimationWrapper onClick={() => runAnimation(\"off\")} color=\"#000000\">\n                    <span className=\"title\">Off</span>\n                </AnimationWrapper>\n            </AnimationsWrapper>\n\n            <div style={{ width: '100%', display: 'flex', gap: '1rem', padding: '1rem', boxSizing: 'border-box' }}>\n                <div style={{ width: '50%' }}>\n                    <HexColorPicker color={color1} onChange={setColor1} />\n                </div>\n                <div style={{ width: '50%' }}>\n                    <HexColorPicker color={color2} onChange={setColor2} />\n                </div>\n            </div>\n\n        </Card>\n    )\n}\n\nexport default Animations;","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { HexColorPicker, RgbaStringColorPicker } from \"react-colorful\";\nimport { AnimationsWrapper, AnimationWrapper, Card, SubTitle } from './Elements';\nimport styled from 'styled-components';\nimport Color from 'color';\nimport { getUrl } from '../reducers/settings-reducer';\nimport { useSelector } from 'react-redux';\n\nconst Games = () => {\n    const [color1, setColor1] = useState(\"#ff0000\");\n    const [color2, setColor2] = useState(\"#0000ff\");\n    const url = useSelector(getUrl);\n\n    const runGame = (name: string) => {\n        axios.post(`${url}/setAnimation`, JSON.stringify({\n            \"name\": name,\n        }));\n    }\n\n    const setGameColors = () => {\n        axios.post(`${url}/setAnimationColors`, JSON.stringify({\n            \"color1\": Color(color1).rgbNumber(),\n            \"color2\": Color(color2).rgbNumber(),\n        }));\n    }\n\n    useEffect(() => {\n        setGameColors();\n    }, [color1, color2])\n    return (\n        <Card style={{ padding: '2rem 0' }}>\n            <SubTitle style={{ paddingLeft: '2rem' }}>Jeux</SubTitle>\n            <AnimationsWrapper>\n                <AnimationWrapper onClick={() => runGame(\"game\")} color=\"#fceba1\" background=\"https://i.ibb.co/X2sYRMn/arrows-reverse-transfer-switch-line-icon.jpg\">\n                    <span className=\"title\">Jeu 1</span>\n                </AnimationWrapper>\n            </AnimationsWrapper>\n\n            <div style={{ width: '100%', display: 'flex', gap: '1rem', padding: '1rem', boxSizing: 'border-box' }}>\n                <div style={{ width: '50%' }}>\n                    <HexColorPicker color={color1} onChange={setColor1} />\n                </div>\n                <div style={{ width: '50%' }}>\n                    <HexColorPicker color={color2} onChange={setColor2} />\n                </div>\n            </div>\n\n        </Card>\n    )\n}\n\nexport default Games;","import axios from 'axios';\nimport Color from 'color';\nimport Switch from \"react-switch\";\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Card, SubTitle, Title3 } from './Elements';\nimport { useSelector } from 'react-redux';\nimport { getUrl } from '../reducers/settings-reducer';\nimport Slider from 'react-input-slider';\n\nconst mapValue = function (curr: number, in_min: number, in_max: number, out_min: number, out_max: number) {\n    return (curr - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}\n\n\nvar lastVal = -1;\n\nconst AudioVis = () => {\n    const url = useSelector(getUrl);\n\n    const [active, setActive] = useState(false);\n    const [width, setWidth] = useState(100);\n    const [speed, setSpeed] = useState(50);\n    const [volumeCoef, setVolumeCoef] = useState(1);\n    const widthRef = useRef<any>(width);\n    const speedRef = useRef<any>(speed);\n    const volumeCoefRef = useRef<any>(volumeCoef);\n    useEffect(() => { if(widthRef.current != undefined) widthRef.current = width }, [width])\n    useEffect(() => { if(speedRef.current != undefined) speedRef.current = speed }, [speed])\n    useEffect(() => { if(volumeCoefRef.current != undefined) volumeCoefRef.current = volumeCoef }, [volumeCoef])\n\n    const updateRibbon = (volume: any) => {\n        axios.post(`${url}/setMusic`, JSON.stringify({ width: widthRef.current, speed: 100 - speedRef.current }));\n        // setVolume(volume);\n    }\n\n    useEffect(() => {\n        if (active == true) {\n            axios.post(`${url}/setMusic`, JSON.stringify({ width: widthRef.current, speed: 100 - speedRef.current }));\n        } else {\n            axios.post(`${url}/setAnimation`, JSON.stringify({ name: \"off\" }));\n        }\n    }, [active])\n\n    return (\n        <Card>\n            <SubTitle style={{ display: 'flex', justifyContent: 'space-between', margin: '0' }}>\n                Musique\n                {/* <br />\n                {_volume}\n                <br />\n                {_volumem} */}\n                <Switch onChange={() => setActive(!active)} checked={active} />\n            </SubTitle>\n\n\n            <Title3>Largeur</Title3>\n            <Slider axis=\"x\" xmin={20} xstep={20} xmax={400} x={width} onChange={({ x }) => setWidth(x)} />\n\n            <Title3>Vitesse</Title3>\n            <Slider axis=\"x\" xmin={0} xstep={1} xmax={100} x={speed} onChange={({ x }) => setSpeed(x)} />\n\n            <Title3>Volume</Title3>\n            <Slider axis=\"x\" xmin={0} xstep={0.1} xmax={20} x={volumeCoef} onChange={({ x }) => setVolumeCoef(x)} />\n            {/* {audio ? 'Stop microphone' : 'Get microphone input'} */}\n        </Card>\n    );\n}\n\nexport default AudioVis;","declare var chrome: any;\n/*global chrome*/\nimport SnakeView from './SnakeView';\nimport Debug from './Debug';\nimport Animations from './Animations';\nimport Games from './Games';\nimport { Title } from './Elements';\nimport AudioVis from './AudioVis';\n\nconst Home = () => {\n    return (\n        <>\n            <Title>Chambre d'Éline</Title>\n\n            <SnakeView />\n            <Animations />\n            <Games />\n            <AudioVis />\n            <Debug />\n        </>\n    )\n}\n\nexport default Home;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport settingsReducer from './reducers/settings-reducer';\nimport defaultSettings from './defaultSettings';\nimport Home from './components/Home';\nimport \"./css/index.css\"\n\nconst run = async () => {\n\n\n\n  const allReducers = combineReducers({\n    settingsReducer: settingsReducer,\n  });\n\n  const allStoreEnhancers = composeWithDevTools(\n    applyMiddleware(thunk),\n  );\n\n\n\n  const store = createStore(\n    allReducers,\n    {\n      settingsReducer: defaultSettings,\n    },\n    allStoreEnhancers\n  );\n\n  // RENDER BOTTOM WIDGET\n  ReactDOM.render(\n    <Provider store={store}>\n      <Home />\n    </Provider>\n    , document.body);\n\n\n}\n\n\n\nrun();\n"],"sourceRoot":""}